{"version":3,"sources":["components/Card.js","components/CardList.js","components/Searchbox.js","components/Scroll.js","components/ErrorBoundaries.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","Searchbox","searchfield","searchChange","type","placeholder","onChange","value","Scroll","props","style","overflowX","border","height","children","ErrorBoundaries","state","hasError","error","info","this","setState","Component","App","useState","setRobots","field","setFields","useEffect","loadData","a","axios","get","then","response","data","console","log","filteredRobots","filter","robot","toLocaleLowerCase","includes","length","event","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAeeA,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,sBAAKC,UAAU,uDAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,cACpB,gCACI,6BAAKF,IACL,4BAAIC,WCgBLK,EApBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAGhB,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIR,GAAKO,EAAKP,GACVF,KAAOS,EAAKT,KACZC,MAAQQ,EAAKR,OAHPS,SCIfC,EAdG,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAC9B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVW,KAAK,SACLC,YAAY,kBACZC,SAAWH,EACXI,MAAOL,GAAe,Q,yBCEvBM,EATA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAO,SAApE,SACKJ,EAAMK,Y,gCCgBJC,E,kDAnBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACG,OAAIG,KAAKJ,MAAMC,SACJ,gEAEJG,KAAKX,MAAMK,a,GAhBKQ,aCyCfC,EAnCH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACP3B,EADO,KACC4B,EADD,OAEaD,mBAAS,IAFtB,mBAEPE,EAFO,KAEAC,EAFA,KAGdC,qBAAU,WACNC,MACD,IACH,IAGMA,EAAQ,uCAAG,sBAAAC,EAAA,sEACPC,IAAMC,IAAI,8CAA8CC,MAAK,SAACC,GAChET,EAAUS,EAASC,MACnBC,QAAQC,IAAI,aAAcxC,MAHjB,2CAAH,qDAORyC,EAAiBzC,EAAO0C,QAAQ,SAAAC,GAClC,OAAOA,EAAMlD,KAAKmD,oBAAoBC,SAAShB,EAAMe,wBAGzD,OAAQ5C,EAAO8C,OAGP,sBAAKlD,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,2BACA,cAAC,EAAD,CAAWS,YAAawB,EAAOvB,aAnBpB,SAACyC,GACpBjB,EAAUiB,EAAMC,OAAOtC,UAmBf,cAAC,EAAD,UACI,cAAC,EAAD,UACK,cAAC,EAAD,CAAUV,OAAQyC,WAPnC,oBAAI7C,UAAU,KAAd,yBClBOqD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9f134c53.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name, email, id}) => {\n    return(\n        <div className=' tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robot' src={`https://robohash.org/${id}?200x200`}/>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n        \n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n\nconst CardList = ({ robots }) => {\n\n\n    return(\n        <div>\n            {\n            robots.map((user, i) => {\n                return (\n                    <Card \n                        key= {i} \n                        id={ user.id } \n                        name={ user.name } \n                        email={ user.email }\n                    />);\n            })\n            }\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\n\nconst Searchbox = ({ searchfield, searchChange}) => {\n    return (\n        <div className='pa2'>\n            <input \n                className='pa3 ba b--green bg-lightest-blue'\n                type=\"search\" \n                placeholder=\"search a robots\"\n                onChange= {searchChange}\n                value={searchfield || ''}\n            />\n        </div>\n    );\n}\n\nexport default Searchbox;","import React from 'react';\n\n\n\nconst Scroll = (props) => {\n    return(\n        <div style={{overflowX: 'scroll', border: '1px solid black', height:'600px'}}>\n            {props.children}\n        </div>\n    );\n}\n\n\nexport default Scroll;","import React, { Component } from 'react';\n\n\nclass ErrorBoundaries extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false,\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({hasError: true});\n    }\n\n    render() {\n       if (this.state.hasError) {\n           return <h1>Oooooooops. That is not good !</h1>\n       }\n       return this.props.children;\n    }\n}\n\nexport default ErrorBoundaries; ","import React, { useState, useEffect } from 'react';\nimport CardList from '../components/CardList';\n// import { robots } from './robot';\nimport Searchbox from '../components/Searchbox';\nimport './App.css';\nimport axios from 'axios';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundaries from '../components/ErrorBoundaries';\n\nconst App = () => {\n    const [robots, setRobots] = useState([]);\n    const [field, setFields] = useState('');\n    useEffect(()=>{\n        loadData();\n    }, []);\n    const onSearchChange = (event) => {\n        setFields(event.target.value);\n    }\n    const loadData = async () => {\n        await axios.get('https://jsonplaceholder.typicode.com/users').then((response)=>{\n            setRobots(response.data);\n            console.log('Response: ', robots);\n        })\n    }\n    \n    const filteredRobots = robots.filter( robot => {\n        return robot.name.toLocaleLowerCase().includes(field.toLocaleLowerCase());\n    });\n\n    return !robots.length ?\n        <h1 className='tc'>Loading...</h1> :\n        (\n            <div className='tc'>\n                <h1 className='f1'>Robot Friends</h1>\n                <Searchbox searchfield={field} searchChange={onSearchChange}/>\n                <Scroll>\n                    <ErrorBoundaries>\n                         <CardList robots={filteredRobots}/>\n                    </ErrorBoundaries>\n                </Scroll>\n            </div>\n        );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}